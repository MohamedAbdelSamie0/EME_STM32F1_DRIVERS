/*********************************************************************************/
/*	Module		: AFIO
 *	File name	: AFIO_program.c
 *
 * 	Author    	: Mohamed Abdelsamie
 * 	Date      	: 09/09/2023
*********************************************************************************/
#include "STD_TYPES.h"
#include "BIT_MATH.h"

#include "GPIO_interface.h"

#include "AFIO_Cfg.h"
#include "AFIO_interface.h"
#include "AFIO_private.h"

void AFIO_voidSetEXTIConfiguration(uint8 Copy_u8EXTI_Line, uint8 Copy_u8Port)
{
	/*	variable to determine which EXTIx register to access	*/
	uint8 Local_u8RegisterIdx = 0;

	Local_u8RegisterIdx = Copy_u8EXTI_Line / 4;

	Copy_u8EXTI_Line %= 4;	/*	update variable to determine shift value for appropriate port	*/

	AFIO-> EXTICR[Local_u8RegisterIdx] &= ~( (0b1111) << (Copy_u8EXTI_Line * 4) );	/*	clear register first	*/
	AFIO-> EXTICR[Local_u8RegisterIdx] |= ( (Copy_u8Port) << (Copy_u8EXTI_Line * 4) );
}


void AFIO_voidRemapPeripheralPins(uint8 Copy_u8Port)
{
	if(Copy_u8Port <= 26 && Copy_u8Port >= 0)
	{
		/*	more peripherals remaping to be added in the future	*/
		switch (Copy_u8Port) {
			case USART1_REMAP:
				SET_BIT(AFIO-> MAPR, USART1_REMAP);
				break;
			case CAN_REMAP:
				CLR_BIT(AFIO-> MAPR, CAN_REMAP);
				SET_BIT(AFIO-> MAPR, CAN_REMAP + 1);
			default:
				break;
		}
	}
	else
	{
		/*	do nothing; error handling	*/
	}
}
